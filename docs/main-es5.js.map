{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/footer/footer.component.html","src/app/main-dashboard/main-dashboard.component.html","src/app/map/map.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/data/data.js","src/app/data/provincesData.js","src/app/footer/footer.component.css","src/app/footer/footer.component.ts","src/app/main-dashboard/main-dashboard.component.css","src/app/main-dashboard/main-dashboard.component.ts","src/app/map/map.component.css","src/app/map/map.component.ts","src/app/services/coronastatistics.service.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-map></app-map>\\r\\n<app-footer></app-footer>\"","export default \"<footer>\\n  <p  class=\\\"text-xs-center\\\">© Copyright 2020. All rights reserved.</p>\\n  <p  class=\\\"text-xs-center\\\"> Developed by Daniel Montes</p>\\n</footer>\\n\"","export default \"<nav class=\\\"navbar navbar-expand-md bg-dark navbar-dark sticky-top\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{ title }}\\r\\n        <i class=\\\"fas fa-tools\\\"></i>\\r\\n    </a>\\r\\n    <button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navb\\\" aria-expanded=\\\"true\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div id=\\\"navb\\\" class=\\\"navbar-collapse collapse hide\\\">\\r\\n    </div>\\r\\n</nav>\\r\\n\\r\\n\"","export default \"<app-main-dashboard></app-main-dashboard>\\r\\n<div class=\\\"map-container\\\">\\r\\n    <div class=\\\"map-frame\\\">\\r\\n      <div id=\\\"map\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n<div  id=\\\"generalStats\\\" class=\\\"card text-white bg-dark mb-3\\\" style=\\\"max-width: 18rem;\\\">\\r\\n  <div class=\\\"card-header\\\">General Stats</div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <p class=\\\"card-text\\\"><b>Date:</b> {{ lastChecked }} </p>\\r\\n    <p class=\\\"card-text\\\"><b>Cases:</b> {{ cases }} </p>\\r\\n    <p class=\\\"card-text\\\"><b>New cases:</b> {{ todayCases }}  </p>\\r\\n    <p class=\\\"card-text\\\"><b>Total recovered: </b>  {{ totalRecovered }}   </p>\\r\\n    <p class=\\\"card-text\\\"><b>Total deaths: </b> {{ deaths}} </p>\\r\\n  </div>\\r\\n</div>\\r\\n<div id=\\\"showMarkers\\\" class=\\\"btn-group-vertical\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"exampleCheck1\\\" (click)=\\\"showDistricts()\\\">Districts View</button>\\r\\n  <br>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"exampleCheck2\\\" (click)=\\\"showProvinces()\\\">Provinces View</button>\\r\\n</div>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n  title = 'COVID19-CR';\r\n}\r\n","import { CoronastatisticsService } from './services/coronastatistics.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { MainDashboardComponent } from './main-dashboard/main-dashboard.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HttpClientModule} from '@angular/common/http';\r\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MapComponent,\r\n    MainDashboardComponent,\r\n    FooterComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    LeafletModule.forRoot()\r\n  ],\r\n  providers: [CoronastatisticsService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default [{\r\n  \"name\": \"Grecia\",\r\n  \"latlng\": [10.0726507, -84.3117298],\r\n  \"cases\": 9\r\n}, {\r\n  \"name\": \"Alajuela\",\r\n  \"latlng\": [10.0169109, -84.2156165],\r\n  \"cases\": 45\r\n}, {\r\n  \"name\": \"San Jose\",\r\n  \"latlng\": [9.9333669, -84.0858859],\r\n  \"cases\": 23\r\n}, {\r\n  \"name\": \"Santa Ana\",\r\n  \"latlng\": [9.9327098, -84.1823177],\r\n  \"cases\": 16\r\n}, {\r\n  \"name\": \"Escazu\",\r\n  \"latlng\": [9.9194401, -84.1413027],\r\n  \"cases\": 13\r\n}, {\r\n  \"name\": \"Tibas\",\r\n  \"latlng\": [9.9601982, -84.0822821],\r\n  \"cases\": 12\r\n}, {\r\n  \"name\": \"Heredia\",\r\n  \"latlng\": [9.9975216, -84.1211849],\r\n  \"cases\": 12\r\n}, {\r\n  \"name\": \"Desamparados\",\r\n  \"latlng\": [9.8965978, -84.0631713],\r\n  \"cases\": 12\r\n}, {\r\n  \"name\": \"Goicoechea\",\r\n  \"latlng\": [9.9473717, -84.0179533],\r\n  \"cases\": 8\r\n}, {\r\n  \"name\": \"La Union\",\r\n  \"latlng\": [9.9388468, -84.0078108],\r\n  \"cases\": 6\r\n}, {\r\n  \"name\": \"Moravia\",\r\n  \"latlng\": [9.9618075, -84.0532257],\r\n  \"cases\": 6\r\n}, {\r\n  \"name\": \"San Carlos\",\r\n  \"latlng\": [10.3378529, -84.4408188],\r\n  \"cases\": 6\r\n}, {\r\n  \"name\": \"Cartago\",\r\n  \"latlng\": [9.8633303, -83.9245327],\r\n  \"cases\": 5\r\n}, {\r\n  \"name\": \"Curridabat\",\r\n  \"latlng\": [9.9134323, -84.0332696],\r\n  \"cases\": 5\r\n}, {\r\n  \"name\": \"Montes de Oca\",\r\n  \"latlng\": [9.9381134, -84.045481],\r\n  \"cases\": 5\r\n}, {\r\n  \"name\": \"Poas\",\r\n  \"latlng\": [10.0744457, -84.2479653],\r\n  \"cases\": 5\r\n}, {\r\n  \"name\": \"Nicoya\",\r\n  \"latlng\": [10.1494207, -85.4711438],\r\n  \"cases\": 3\r\n}, {\r\n  \"name\": \"Perez Zeledon\",\r\n  \"latlng\": [9.3535614, -83.7278156],\r\n  \"cases\": 3\r\n}, {\r\n  \"name\": \"Puntarenas\",\r\n  \"latlng\": [9.9785489, -84.8573261],\r\n  \"cases\": 3\r\n}, {\r\n  \"name\": \"Santa Cruz\",\r\n  \"latlng\": [10.2602518, -85.5885873],\r\n  \"cases\": 2\r\n}, {\r\n  \"name\": \"Atenas\t\t\",\r\n  \"latlng\": [9.97718, -84.379997],\r\n  \"cases\": 2\r\n}, {\r\n  \"name\": \"Santa Barbara\t\",\r\n  \"latlng\": [10.03819, -84.15888],\r\n  \"cases\": 2\r\n}, {\r\n  \"name\": \"Vazquez de Coronado\",\r\n  \"latlng\": [9.9775608,-84.0083074],\r\n  \"cases\": 2,\r\n}, {\r\n  \"name\": \"San Rafael\t\t\",\r\n  \"latlng\": [10.0128373, -84.106983, 15],\r\n  \"cases\": 2\r\n}, {\r\n  \"name\": \"Aserri\t\t\",\r\n  \"latlng\": [9.865107, -84.1027104],\r\n  \"cases\": 2\r\n}, {\r\n  \"name\": \"Coto Brus\t\",\r\n  \"latlng\": [8.9540659, -83.0791588],\r\n  \"cases\": 2\r\n}, {\r\n  \"name\": \"Jimenez\",\r\n  \"latlng\": [10.1994596, -83.7836826],\r\n  \"cases\": 2\r\n}, {\r\n  \"name\": \"El Guarco\",\r\n  \"cases\": 2,\r\n  \"latlng\": [9.8431777, -83.9537617]\r\n}, {\r\n  \"name\": \"Garabito\t\",\r\n  \"cases\": 2,\r\n  \"latlng\": [9.9778492, -84.8316098]\r\n}, {\r\n  \"name\": \"Oreamuno\",\r\n  \"cases\": 2,\r\n  \"latlng\": [9.903667, -83.9767081]\r\n}, {\r\n  \"name\": \"Sarchi\t\",\r\n  \"cases\": 2,\r\n  \"latlng\": [10.0919309, -84.3558599]\r\n}, {\r\n  \"name\": \"Barva\t\",\r\n  \"cases\": 1,\r\n  \"latlng\": [10.0202225, -84.1279471]\r\n}, {\r\n  \"name\": \"Limon\t\t\",\r\n  \"cases\": 1,\r\n  \"latlng\": [9.9914448, -83.0325223]\r\n}, {\r\n  \"name\": \"Palmares\t\",\r\n  \"cases\": 1,\r\n  \"latlng\": [10.056764, -84.4347075]\r\n}, {\r\n  \"name\": \"Liberia\t\t\",\r\n  \"cases\": 1,\r\n  \"latlng\": [10.6317634, -85.4433859]\r\n}, {\r\n  \"name\": \"Montes de Oro\",\r\n  \"cases\": 1,\r\n  \"latlng\": [10.0919364, -84.7311813]\r\n}, {\r\n  \"name\": \"Belen\t\t\",\r\n  \"cases\": 1,\r\n  \"latlng\": [9.9852018, -84.1852407]\r\n}, {\r\n  \"name\": \"Flores\t\t\",\r\n  \"cases\": 1,\r\n  \"latlng\": [10.0070839, -84.1616868]\r\n}, {\r\n  \"name\": \"Alvarado\t\",\r\n  \"cases\": 1,\r\n  \"latlng\": [9.9162158, -83.8183322]\r\n}, {\r\n  \"name\": \"Orotina\t\",\r\n  \"cases\": 1,\r\n  \"latlng\": [9.9122007, -84.5284045]\r\n}, {\r\n  \"name\": \"Tilaran\t\",\r\n  \"latlng\": [10.4670143, -84.972916],\r\n  \"cases\": 1\r\n}]\r\n","export const provincesData = {\r\n  type: \"FeatureCollection\",\r\n  features: [\r\n    {\r\n      type: \"Feature\",\r\n      id: \"01\",\r\n      properties: {\r\n        name: \"Alajuela\",\r\n        cases: 0,\r\n      },\r\n      geometry: {\r\n        type: \"Polygon\",\r\n        coordinates: [\r\n          [\r\n            [-84.159315, 10.773952],\r\n            [-84.16761, 10.031062],\r\n            [-84.249997, 9.936388],\r\n            [-84.45872, 9.890393],\r\n            [-84.560358, 9.860628],\r\n            [-84.681205, 9.882275],\r\n            [-84.557643, 10.014834],\r\n            [-84.661982, 10.16356],\r\n            [-84.774592, 10.312217],\r\n            [-84.782844, 10.485111],\r\n            [-85.049227, 10.703792],\r\n            [-85.40627, 10.881859],\r\n            [-85.367873, 11.016689],\r\n            [-85.249781, 11.062516],\r\n            [-84.909236, 10.943888],\r\n            [-84.678508, 11.078689],\r\n            [-84.425826, 10.951978],\r\n            [-84.35439, 10.992424],\r\n            [-84.318679, 10.914224],\r\n            [-84.222557, 10.87107],\r\n            [-84.225289, 10.809026],\r\n            [-84.159381, 10.779348]\r\n          ]\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      id: \"02\",\r\n      properties: {\r\n        name: \"Cartago\",\r\n        cases: 40\r\n      },\r\n      geometry: {\r\n        type: \"Polygon\",\r\n        coordinates: [\r\n          [\r\n            [-83.94267, 10.144804],\r\n            [-83.94696, 10.146663],\r\n            [-83.942668, 10.133821],\r\n            [-83.934944, 10.101036],\r\n            [-83.929619, 10.081769],\r\n            [-83.902497, 10.065544],\r\n            [-83.876066, 10.034274],\r\n            [-83.880951, 10.019568],\r\n            [-83.870141, 10.011453],\r\n            [-83.868682, 9.993196],\r\n            [-83.861302, 9.9817],\r\n            [-83.858901, 9.971218],\r\n            [-83.876068, 9.969865],\r\n            [-83.899415, 9.966145],\r\n            [-83.929453, 9.950083],\r\n            [-83.938724, 9.957861],\r\n            [-83.960872, 9.948223],\r\n            [-84.008585, 9.938924],\r\n            [-84.009011, 9.926919],\r\n            [-84.037841, 9.894452],\r\n            [-83.999403, 9.871452],\r\n            [-84.061195, 9.811916],\r\n            [-84.084527, 9.761844],\r\n            [-83.992874, 9.780115],\r\n            [-83.977766, 9.745603],\r\n            [-83.948245, 9.737482],\r\n            [-83.946183, 9.700258],\r\n            [-83.936569, 9.698905],\r\n            [-83.920089, 9.68266],\r\n            [-83.901551, 9.688752],\r\n            [-83.887814, 9.670477],\r\n            [-83.850054, 9.664385],\r\n            [-83.847296, 9.625122],\r\n            [-83.762852, 9.603458],\r\n            [-83.758363, 9.557417],\r\n            [-83.70343, 9.552],\r\n            [-83.637512, 9.576376],\r\n            [-83.577091, 9.538458],\r\n            [-83.538637, 9.508662],\r\n            [-83.483717, 9.481572],\r\n            [-83.513924, 9.541166],\r\n            [-83.511167, 9.595334],\r\n            [-83.431527, 9.673861],\r\n            [-83.431515, 9.703643],\r\n            [-83.338145, 9.825448],\r\n            [-83.351871, 9.928271],\r\n            [-83.310719, 9.982376],\r\n            [-83.601863, 9.985081],\r\n            [-83.942445, 10.144635]\r\n          ]\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      id: \"02\",\r\n      properties: {\r\n        name: \"Heredia\",\r\n        cases: 25\r\n      },\r\n      geometry: {\r\n        type: \"Polygon\",\r\n        coordinates: [\r\n          [\r\n            [-84.01365, 10.033767],\r\n            [-84.014339, 10.045937],\r\n            [-84.029099, 10.057431],\r\n            [-84.026697, 10.081431],\r\n            [-84.015868, 10.075685],\r\n            [-83.980167, 10.101374],\r\n            [-83.974668, 10.166264],\r\n            [-83.929345, 10.187891],\r\n            [-83.851077, 10.255465],\r\n            [-83.841471, 10.32843],\r\n            [-83.877171, 10.397325],\r\n            [-83.873047, 10.422988],\r\n            [-83.842837, 10.444598],\r\n            [-83.830481, 10.486462],\r\n            [-83.844212, 10.53237],\r\n            [-83.83872, 10.570172],\r\n            [-83.845584, 10.59987],\r\n            [-83.838712, 10.641713],\r\n            [-83.787904, 10.657909],\r\n            [-83.761807, 10.695695],\r\n            [-83.706888, 10.692996],\r\n            [-83.741214, 10.726731],\r\n            [-83.731605, 10.740223],\r\n            [-83.752211, 10.772603],\r\n            [-83.818128, 10.748319],\r\n            [-83.877179, 10.719984],\r\n            [-83.929357, 10.705141],\r\n            [-83.933481, 10.718635],\r\n            [-83.967809, 10.722683],\r\n            [-83.971936, 10.742922],\r\n            [-84.024116, 10.794188],\r\n            [-84.043343, 10.772603],\r\n            [-84.065315, 10.760461],\r\n            [-84.083168, 10.76181],\r\n            [-84.103767, 10.777999],\r\n            [-84.125738, 10.763159],\r\n            [-84.132607, 10.786094],\r\n            [-84.16007, 10.783396],\r\n            [-84.162816, 10.382467],\r\n            [-84.162818, 10.079741],\r\n            [-84.177925, 10.005368],\r\n            [-84.202638, 9.990491],\r\n            [-84.183406, 9.970203],\r\n            [-84.116117, 9.962088],\r\n            [-84.065306, 9.967498],\r\n            [-84.022739, 9.994548],\r\n            [-84.014589, 10.033767]\r\n          ]\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      id: \"02\",\r\n      properties: {\r\n        name: \"San Jose\",\r\n        cases: 25\r\n      },\r\n      geometry: {\r\n        type: \"Polygon\",\r\n        coordinates: [\r\n          [\r\n            [-83.42946, 9.365063],\r\n            [-83.488522, 9.260713],\r\n            [-83.514619, 9.251225],\r\n            [-83.520115, 9.21056],\r\n            [-83.477549, 9.17938],\r\n            [-83.474797, 9.142774],\r\n            [-83.485782, 9.100741],\r\n            [-83.509126, 9.070907],\r\n            [-83.570919, 9.08718],\r\n            [-83.616239, 9.131927],\r\n            [-83.668424, 9.157688],\r\n            [-83.691774, 9.209205],\r\n            [-83.72885, 9.226827],\r\n            [-83.76181, 9.247159],\r\n            [-83.771426, 9.228182],\r\n            [-83.808501, 9.233604],\r\n            [-83.84558, 9.286465],\r\n            [-83.851078, 9.348803],\r\n            [-83.904629, 9.400291],\r\n            [-83.958188, 9.412484],\r\n            [-84.015865, 9.463963],\r\n            [-84.070797, 9.501889],\r\n            [-84.05982, 9.570959],\r\n            [-84.127101, 9.575022],\r\n            [-84.150453, 9.625122],\r\n            [-84.22323, 9.619706],\r\n            [-84.32485, 9.641369],\r\n            [-84.392146, 9.6346],\r\n            [-84.400394, 9.592625],\r\n            [-84.42923, 9.564188],\r\n            [-84.477293, 9.568251],\r\n            [-84.533596, 9.585855],\r\n            [-84.570678, 9.654908],\r\n            [-84.59128, 9.740189],\r\n            [-84.539105, 9.765904],\r\n            [-84.576171, 9.817329],\r\n            [-84.507521, 9.905274],\r\n            [-84.445722, 9.926919],\r\n            [-84.392163, 9.93233],\r\n            [-84.34547, 9.920155],\r\n            [-84.283674, 9.925566],\r\n            [-84.245219, 9.940446],\r\n            [-84.197155, 9.964793],\r\n            [-84.150463, 9.96344],\r\n            [-84.079055, 9.962088],\r\n            [-84.021375, 9.993196],\r\n            [-84.013128, 10.055403],\r\n            [-84.026519, 10.082446],\r\n            [-83.99906, 10.09191],\r\n            [-83.977087, 10.126385],\r\n            [-83.970905, 10.16694],\r\n            [-83.932457, 10.18316],\r\n            [-83.946183, 10.15207],\r\n            [-83.942065, 10.123681],\r\n            [-83.933139, 10.086502],\r\n            [-83.911169, 10.064192],\r\n            [-83.88439, 10.035795],\r\n            [-83.867909, 9.997253],\r\n            [-83.862067, 9.976966],\r\n            [-83.922481, 9.955325],\r\n            [-83.969175, 9.948562],\r\n            [-84.01724, 9.939093],\r\n            [-84.013127, 9.90798],\r\n            [-84.040589, 9.89851],\r\n            [-84.048831, 9.882275],\r\n            [-84.006266, 9.870099],\r\n            [-84.018619, 9.843039],\r\n            [-84.081783, 9.794324],\r\n            [-84.101015, 9.765904],\r\n            [-84.037855, 9.755077],\r\n            [-83.996653, 9.779438],\r\n            [-83.98017, 9.740189],\r\n            [-83.956825, 9.732068],\r\n            [-83.95133, 9.699582],\r\n            [-83.929359, 9.671154],\r\n            [-83.901894, 9.681984],\r\n            [-83.877175, 9.660323],\r\n            [-83.853829, 9.661677],\r\n            [-83.855198, 9.629184],\r\n            [-83.778305, 9.60075],\r\n            [-83.765936, 9.579084],\r\n            [-83.739846, 9.542521],\r\n            [-83.713753, 9.537103],\r\n            [-83.672557, 9.545229],\r\n            [-83.651954, 9.569605],\r\n            [-83.62449, 9.545229],\r\n            [-83.573681, 9.522206],\r\n            [-83.528362, 9.496472],\r\n            [-83.494028, 9.474799],\r\n            [-83.483038, 9.435515],\r\n            [-83.470679, 9.392161],\r\n            [-83.430857, 9.363708]\r\n          ]\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      id: \"02\",\r\n      properties: {\r\n        name: \"Limon\",\r\n        cases: 25\r\n      },\r\n      geometry: {\r\n        type: \"Polygon\",\r\n        coordinates: [\r\n          [\r\n            [-82.935429, 9.077688],\r\n            [-82.981779, 9.095317],\r\n            [-82.994143, 9.157688],\r\n            [-83.061427, 9.165823],\r\n            [-83.073794, 9.243093],\r\n            [-83.172659, 9.321701],\r\n            [-83.234462, 9.323056],\r\n            [-83.315484, 9.385387],\r\n            [-83.392389, 9.342027],\r\n            [-83.463801, 9.390807],\r\n            [-83.509123, 9.588563],\r\n            [-83.433609, 9.671154],\r\n            [-83.419867, 9.728007],\r\n            [-83.340226, 9.837626],\r\n            [-83.349826, 9.930977],\r\n            [-83.314127, 9.983728],\r\n            [-83.603846, 9.985081],\r\n            [-83.704122, 10.045937],\r\n            [-83.726106, 10.037824],\r\n            [-83.945805, 10.147339],\r\n            [-83.929699, 10.190594],\r\n            [-83.858304, 10.250736],\r\n            [-83.852802, 10.318973],\r\n            [-83.865845, 10.381791],\r\n            [-83.879578, 10.400702],\r\n            [-83.856924, 10.443247],\r\n            [-83.833578, 10.464855],\r\n            [-83.830828, 10.506041],\r\n            [-83.845246, 10.551947],\r\n            [-83.842501, 10.603245],\r\n            [-83.839755, 10.644412],\r\n            [-83.781398, 10.657234],\r\n            [-83.764913, 10.701093],\r\n            [-83.706553, 10.690297],\r\n            [-83.740873, 10.727405],\r\n            [-83.750489, 10.770579],\r\n            [-83.704492, 10.790141],\r\n            [-83.665352, 10.798909],\r\n            [-83.670152, 10.853538],\r\n            [-83.676332, 10.894671],\r\n            [-83.698302, 10.94254],\r\n            [-83.656426, 10.938495],\r\n            [-83.630331, 10.914898],\r\n            [-83.600119, 10.860281],\r\n            [-83.56922, 10.76923],\r\n            [-83.532488, 10.656559],\r\n            [-83.459701, 10.485111],\r\n            [-83.377305, 10.363555],\r\n            [-83.270192, 10.227086],\r\n            [-83.142479, 10.071629],\r\n            [-83.104014, 10.017539],\r\n            [-83.032607, 10.020244],\r\n            [-82.994151, 9.947209],\r\n            [-82.906267, 9.830861],\r\n            [-82.847211, 9.760491],\r\n            [-82.800518, 9.759137],\r\n            [-82.788153, 9.709057],\r\n            [-82.76069, 9.667092],\r\n            [-82.715373, 9.665738],\r\n            [-82.705755, 9.649492],\r\n            [-82.645338, 9.642723],\r\n            [-82.602763, 9.630538],\r\n            [-82.560191, 9.60075],\r\n            [-82.556066, 9.564188],\r\n            [-82.553319, 9.527623],\r\n            [-82.600004, 9.565543],\r\n            [-82.60001, 9.524914],\r\n            [-82.617861, 9.496472],\r\n            [-82.650818, 9.495117],\r\n            [-82.68103, 9.497826],\r\n            [-82.703004, 9.539812],\r\n            [-82.742827, 9.572314],\r\n            [-82.782653, 9.570959],\r\n            [-82.816986, 9.588563],\r\n            [-82.845826, 9.587209],\r\n            [-82.859561, 9.57773],\r\n            [-82.858189, 9.537103],\r\n            [-82.841712, 9.505953],\r\n            [-82.849948, 9.477508],\r\n            [-82.935082, 9.474799],\r\n            [-82.930974, 9.142774],\r\n            [-82.93493, 9.0804],\r\n            [-82.935617, 9.076671]\r\n          ]\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      id: \"02\",\r\n      properties: {\r\n        name: \"Guanacaste\",\r\n        cases: 25\r\n      },\r\n      geometry: {\r\n        type: \"Polygon\",\r\n        coordinates: [\r\n          [\r\n            [-85.612324, 11.216122],\r\n            [-85.686461, 11.08408],\r\n            [-85.664501, 11.05443],\r\n            [-85.661753, 11.040951],\r\n            [-85.69196, 11.016689],\r\n            [-85.733157, 11.040951],\r\n            [-85.763371, 11.019384],\r\n            [-85.686482, 10.976246],\r\n            [-85.713933, 10.925011],\r\n            [-85.875963, 10.949282],\r\n            [-85.856762, 10.925011],\r\n            [-85.939145, 10.895345],\r\n            [-85.766146, 10.811724],\r\n            [-85.678244, 10.806328],\r\n            [-85.65077, 10.674104],\r\n            [-85.68372, 10.644412],\r\n            [-85.697455, 10.598521],\r\n            [-85.64528, 10.636314],\r\n            [-85.664496, 10.582322],\r\n            [-85.724915, 10.536421],\r\n            [-85.777101, 10.539121],\r\n            [-85.807316, 10.506716],\r\n            [-85.777113, 10.452701],\r\n            [-85.867733, 10.358151],\r\n            [-85.832045, 10.306813],\r\n            [-85.851264, 10.277086],\r\n            [-85.840281, 10.198704],\r\n            [-85.807326, 10.120302],\r\n            [-85.760636, 10.049994],\r\n            [-85.702959, 9.968851],\r\n            [-85.664504, 9.903921],\r\n            [-85.409102, 9.841686],\r\n            [-85.323935, 9.817329],\r\n            [-85.227806, 9.7253],\r\n            [-85.178361, 9.841686],\r\n            [-85.279963, 9.925566],\r\n            [-85.267975, 9.960735],\r\n            [-85.247381, 9.972908],\r\n            [-85.199319, 9.970203],\r\n            [-85.162239, 9.988462],\r\n            [-85.169786, 10.021596],\r\n            [-85.14903, 10.039852],\r\n            [-85.155541, 10.048642],\r\n            [-85.172362, 10.046275],\r\n            [-85.196394, 10.079741],\r\n            [-85.238276, 10.10374],\r\n            [-85.246864, 10.170995],\r\n            [-85.242746, 10.217625],\r\n            [-85.243089, 10.244654],\r\n            [-85.225582, 10.196],\r\n            [-85.201037, 10.170319],\r\n            [-85.12413, 10.156802],\r\n            [-85.071942, 10.162209],\r\n            [-85.031604, 10.160181],\r\n            [-85.037781, 10.190932],\r\n            [-85.026454, 10.198704],\r\n            [-85.026452, 10.187891],\r\n            [-85.003453, 10.173022],\r\n            [-85.004136, 10.160519],\r\n            [-84.930675, 10.110838],\r\n            [-84.91968, 10.109486],\r\n            [-84.927574, 10.116922],\r\n            [-84.929292, 10.157477],\r\n            [-84.904919, 10.176402],\r\n            [-84.875394, 10.186201],\r\n            [-84.877793, 10.201407],\r\n            [-84.889808, 10.213571],\r\n            [-84.871273, 10.247695],\r\n            [-84.870241, 10.265263],\r\n            [-84.862345, 10.282153],\r\n            [-84.84415, 10.290599],\r\n            [-84.838999, 10.326403],\r\n            [-84.828357, 10.336198],\r\n            [-84.811878, 10.33147],\r\n            [-84.794712, 10.322012],\r\n            [-84.786814, 10.322012],\r\n            [-84.774112, 10.34937],\r\n            [-84.767931, 10.353085],\r\n            [-84.780631, 10.384493],\r\n            [-84.766216, 10.422313],\r\n            [-84.773079, 10.461141],\r\n            [-84.77514, 10.496589],\r\n            [-84.792647, 10.489837],\r\n            [-84.818738, 10.514818],\r\n            [-84.821576, 10.525113],\r\n            [-84.835993, 10.523425],\r\n            [-84.845264, 10.53237],\r\n            [-84.84372, 10.546209],\r\n            [-84.852645, 10.546209],\r\n            [-84.860198, 10.555659],\r\n            [-84.882169, 10.56241],\r\n            [-84.891269, 10.560047],\r\n            [-84.903456, 10.569835],\r\n            [-84.910839, 10.568991],\r\n            [-84.922683, 10.572028],\r\n            [-84.93058, 10.582153],\r\n            [-84.938991, 10.586034],\r\n            [-84.945514, 10.59464],\r\n            [-84.956843, 10.594133],\r\n            [-84.974867, 10.605776],\r\n            [-84.986197, 10.604257],\r\n            [-84.989803, 10.618093],\r\n            [-84.998557, 10.623998],\r\n            [-85.001648, 10.625685],\r\n            [-85.000447, 10.635977],\r\n            [-85.003365, 10.640701],\r\n            [-85.000104, 10.652342],\r\n            [-85.002207, 10.658077],\r\n            [-85.008214, 10.662211],\r\n            [-85.011476, 10.668537],\r\n            [-85.018428, 10.67326],\r\n            [-85.019888, 10.674778],\r\n            [-85.021347, 10.683044],\r\n            [-85.02684, 10.692575],\r\n            [-85.04203, 10.697298],\r\n            [-85.053103, 10.696539],\r\n            [-85.057052, 10.698816],\r\n            [-85.060228, 10.704382],\r\n            [-85.060486, 10.708599],\r\n            [-85.067437, 10.708093],\r\n            [-85.070785, 10.712731],\r\n            [-85.086834, 10.713069],\r\n            [-85.096448, 10.717707],\r\n            [-85.101341, 10.71349],\r\n            [-85.106233, 10.713575],\r\n            [-85.109924, 10.711719],\r\n            [-85.119107, 10.710623],\r\n            [-85.124601, 10.710876],\r\n            [-85.124516, 10.714924],\r\n            [-85.128893, 10.719141],\r\n            [-85.128807, 10.73179],\r\n            [-85.139449, 10.744271],\r\n            [-85.141767, 10.745114],\r\n            [-85.144514, 10.747307],\r\n            [-85.155842, 10.746548],\r\n            [-85.167773, 10.747897],\r\n            [-85.18142, 10.746295],\r\n            [-85.190433, 10.748319],\r\n            [-85.19996, 10.751691],\r\n            [-85.203994, 10.755655],\r\n            [-85.225621, 10.761979],\r\n            [-85.235837, 10.766026],\r\n            [-85.273791, 10.751017],\r\n            [-85.306762, 10.798235],\r\n            [-85.349333, 10.827911],\r\n            [-85.374055, 10.82926],\r\n            [-85.400147, 10.867024],\r\n            [-85.428826, 10.897705],\r\n            [-85.447363, 10.918269],\r\n            [-85.448739, 10.93445],\r\n            [-85.442217, 10.946585],\r\n            [-85.419903, 10.963438],\r\n            [-85.393125, 10.96445],\r\n            [-85.379733, 10.975909],\r\n            [-85.376299, 10.996131],\r\n            [-85.36703, 10.999501],\r\n            [-85.354327, 11.030168],\r\n            [-85.333042, 11.036234],\r\n            [-85.330681, 11.04053],\r\n            [-85.322786, 11.041457],\r\n            [-85.311972, 11.042383],\r\n            [-85.289657, 11.02267],\r\n            [-85.284762, 11.024355],\r\n            [-85.276351, 11.014245],\r\n            [-85.271459, 11.01593],\r\n            [-85.267682, 11.014667],\r\n            [-85.268282, 11.011465],\r\n            [-85.262618, 11.012813],\r\n            [-85.257468, 11.020058],\r\n            [-85.258326, 11.033201],\r\n            [-85.263389, 11.042383],\r\n            [-85.255838, 11.0439],\r\n            [-85.251031, 11.048954],\r\n            [-85.248799, 11.061084],\r\n            [-85.245108, 11.060663],\r\n            [-85.242276, 11.06538],\r\n            [-85.238156, 11.063443],\r\n            [-85.232577, 11.062011],\r\n            [-85.229058, 11.063106],\r\n            [-85.358109, 11.125855],\r\n            [-85.424697, 11.128887],\r\n            [-85.523913, 11.168634],\r\n            [-85.561001, 11.21006],\r\n            [-85.61023, 11.219153],\r\n            [-85.612377, 11.216206]\r\n          ]\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      id: \"02\",\r\n      properties: {\r\n        name: \"Puntarenas\",\r\n        cases: 25\r\n      },\r\n      geometry: {\r\n        type: \"MultiPolygon\",\r\n        coordinates: [\r\n          [\r\n            [\r\n              [-85.091224, 10.158153],\r\n              [-85.03349, 10.159505],\r\n              [-85.026712, 10.15866],\r\n              [-85.026883, 10.168629],\r\n              [-85.035465, 10.173191],\r\n              [-85.039242, 10.191439],\r\n              [-85.025511, 10.200055],\r\n              [-85.028427, 10.19279],\r\n              [-85.02551, 10.185018],\r\n              [-85.009204, 10.17826],\r\n              [-85.00165, 10.169136],\r\n              [-85.005253, 10.160181],\r\n              [-84.981053, 10.147677],\r\n              [-84.980534, 10.140918],\r\n              [-84.972124, 10.138552],\r\n              [-84.959765, 10.129427],\r\n              [-84.945346, 10.116922],\r\n              [-84.929896, 10.113204],\r\n              [-84.920282, 10.110838],\r\n              [-84.927923, 10.127737],\r\n              [-84.932724, 10.153422],\r\n              [-84.912815, 10.165926],\r\n              [-84.904574, 10.178767],\r\n              [-84.876081, 10.186877],\r\n              [-84.87642, 10.201745],\r\n              [-84.889808, 10.211206],\r\n              [-84.870243, 10.243641],\r\n              [-84.869211, 10.26729],\r\n              [-84.860972, 10.282829],\r\n              [-84.844837, 10.292625],\r\n              [-84.838999, 10.326741],\r\n              [-84.82664, 10.335523],\r\n              [-84.794371, 10.321337],\r\n              [-84.777889, 10.286207],\r\n              [-84.763812, 10.271343],\r\n              [-84.766557, 10.259857],\r\n              [-84.734289, 10.250736],\r\n              [-84.72227, 10.258168],\r\n              [-84.724243, 10.268303],\r\n              [-84.704334, 10.262222],\r\n              [-84.696092, 10.270161],\r\n              [-84.686136, 10.283505],\r\n              [-84.67412, 10.279789],\r\n              [-84.668455, 10.259351],\r\n              [-84.657126, 10.242965],\r\n              [-84.6609, 10.210192],\r\n              [-84.664162, 10.193804],\r\n              [-84.684759, 10.176064],\r\n              [-84.668456, 10.174881],\r\n              [-84.66279, 10.166264],\r\n              [-84.668968, 10.154098],\r\n              [-84.665536, 10.146325],\r\n              [-84.674117, 10.139059],\r\n              [-84.665193, 10.121823],\r\n              [-84.648543, 10.094107],\r\n              [-84.640302, 10.077037],\r\n              [-84.627943, 10.065544],\r\n              [-84.624852, 10.046275],\r\n              [-84.602882, 10.043064],\r\n              [-84.572671, 10.019568],\r\n              [-84.565801, 10.021934],\r\n              [-84.566015, 10.028527],\r\n              [-84.563098, 10.02878],\r\n              [-84.563355, 10.016102],\r\n              [-84.556833, 10.003931],\r\n              [-84.554257, 9.99328],\r\n              [-84.552969, 9.986856],\r\n              [-84.561599, 9.9817],\r\n              [-84.571892, 9.986433],\r\n              [-84.593176, 9.971556],\r\n              [-84.612059, 9.954648],\r\n              [-84.635061, 9.947547],\r\n              [-84.6409, 9.937064],\r\n              [-84.650856, 9.94146],\r\n              [-84.660812, 9.930977],\r\n              [-84.667336, 9.917111],\r\n              [-84.677292, 9.905951],\r\n              [-84.681286, 9.905443],\r\n              [-84.682488, 9.909164],\r\n              [-84.688838, 9.903668],\r\n              [-84.683862, 9.893437],\r\n              [-84.688324, 9.886165],\r\n              [-84.683175, 9.887264],\r\n              [-84.678798, 9.879485],\r\n              [-84.680256, 9.877202],\r\n              [-84.67854, 9.876526],\r\n              [-84.678711, 9.87475],\r\n              [-84.67648, 9.877794],\r\n              [-84.669271, 9.876864],\r\n              [-84.661889, 9.875257],\r\n              [-84.658971, 9.876018],\r\n              [-84.655108, 9.872467],\r\n              [-84.647041, 9.869338],\r\n              [-84.648413, 9.865956],\r\n              [-84.647297, 9.864603],\r\n              [-84.646032, 9.866336],\r\n              [-84.645431, 9.864729],\r\n              [-84.642255, 9.865364],\r\n              [-84.640582, 9.864433],\r\n              [-84.637363, 9.865744],\r\n              [-84.635389, 9.864603],\r\n              [-84.628566, 9.862023],\r\n              [-84.614963, 9.860501],\r\n              [-84.61333, 9.861897],\r\n              [-84.610283, 9.861939],\r\n              [-84.60921, 9.860924],\r\n              [-84.602902, 9.861812],\r\n              [-84.601915, 9.859317],\r\n              [-84.597366, 9.85826],\r\n              [-84.595649, 9.852552],\r\n              [-84.600045, 9.848113],\r\n              [-84.585971, 9.840332],\r\n              [-84.575328, 9.846421],\r\n              [-84.562282, 9.841686],\r\n              [-84.56022, 9.832552],\r\n              [-84.569488, 9.825448],\r\n              [-84.575325, 9.82714],\r\n              [-84.583565, 9.821727],\r\n              [-84.582536, 9.804812],\r\n              [-84.567775, 9.809887],\r\n              [-84.551639, 9.7791],\r\n              [-84.541339, 9.782483],\r\n              [-84.537218, 9.776731],\r\n              [-84.553008, 9.7544],\r\n              [-84.565711, 9.759137],\r\n              [-84.571549, 9.738497],\r\n              [-84.592146, 9.742896],\r\n              [-84.583224, 9.710411],\r\n              [-84.583223, 9.679615],\r\n              [-84.563313, 9.626476],\r\n              [-84.555415, 9.624107],\r\n              [-84.548548, 9.613952],\r\n              [-84.544771, 9.585516],\r\n              [-84.531726, 9.579084],\r\n              [-84.528291, 9.572652],\r\n              [-84.485725, 9.569605],\r\n              [-84.45914, 9.578407],\r\n              [-84.431647, 9.558772],\r\n              [-84.393883, 9.598042],\r\n              [-84.391818, 9.637307],\r\n              [-84.304626, 9.644754],\r\n              [-84.224974, 9.625122],\r\n              [-84.187889, 9.616998],\r\n              [-84.150124, 9.627153],\r\n              [-84.133641, 9.598042],\r\n              [-84.143937, 9.57773],\r\n              [-84.130207, 9.553355],\r\n              [-84.071162, 9.565543],\r\n              [-84.083512, 9.508662],\r\n              [-84.002501, 9.44703],\r\n              [-83.957864, 9.396904],\r\n              [-83.929709, 9.38471],\r\n              [-83.911855, 9.401646],\r\n              [-83.88851, 9.371838],\r\n              [-83.888506, 9.362353],\r\n              [-83.843881, 9.34135],\r\n              [-83.860352, 9.298662],\r\n              [-83.839757, 9.254614],\r\n              [-83.76904, 9.215305],\r\n              [-83.753239, 9.218694],\r\n              [-83.760621, 9.241059],\r\n              [-83.747577, 9.243093],\r\n              [-83.73556, 9.222421],\r\n              [-83.706724, 9.225471],\r\n              [-83.666213, 9.18277],\r\n              [-83.675819, 9.17328],\r\n              [-83.673761, 9.154638],\r\n              [-83.651448, 9.142435],\r\n              [-83.646296, 9.129216],\r\n              [-83.6154, 9.126165],\r\n              [-83.553263, 9.082095],\r\n              [-83.505028, 9.074976],\r\n              [-83.478921, 9.130572],\r\n              [-83.489902, 9.203782],\r\n              [-83.520111, 9.211916],\r\n              [-83.43361, 9.359643],\r\n              [-83.392406, 9.339317],\r\n              [-83.33061, 9.378612],\r\n              [-83.231738, 9.317635],\r\n              [-83.178174, 9.327121],\r\n              [-83.073811, 9.243093],\r\n              [-83.080662, 9.221405],\r\n              [-83.055947, 9.197004],\r\n              [-83.064182, 9.178025],\r\n              [-82.994155, 9.156333],\r\n              [-82.933729, 9.072264],\r\n              [-82.888408, 9.074976],\r\n              [-82.740107, 8.981393],\r\n              [-82.709878, 8.920347],\r\n              [-82.750066, 8.908815],\r\n              [-82.781629, 8.875574],\r\n              [-82.820767, 8.857934],\r\n              [-82.879129, 8.831474],\r\n              [-82.867466, 8.806368],\r\n              [-82.893553, 8.779904],\r\n              [-82.919646, 8.76226],\r\n              [-82.881889, 8.69982],\r\n              [-82.842064, 8.667239],\r\n              [-82.826955, 8.597995],\r\n              [-82.826266, 8.557257],\r\n              [-82.831072, 8.513798],\r\n              [-82.854415, 8.453356],\r\n              [-82.874328, 8.435017],\r\n              [-82.914151, 8.427546],\r\n              [-82.932693, 8.431621],\r\n              [-82.961531, 8.406489],\r\n              [-82.985564, 8.368448],\r\n              [-83.019208, 8.348747],\r\n              [-83.046675, 8.333121],\r\n              [-83.024022, 8.310021],\r\n              [-83.000677, 8.295073],\r\n              [-82.991062, 8.277407],\r\n              [-82.975957, 8.293035],\r\n              [-82.941627, 8.269932],\r\n              [-82.923772, 8.247508],\r\n              [-82.927889, 8.218966],\r\n              [-82.913472, 8.200616],\r\n              [-82.900425, 8.176829],\r\n              [-82.90111, 8.151001],\r\n              [-82.890125, 8.121093],\r\n              [-82.878452, 8.086423],\r\n              [-82.883943, 8.048352],\r\n              [-82.903167, 8.029315],\r\n              [-82.920334, 8.054471],\r\n              [-82.914844, 8.093901],\r\n              [-82.917589, 8.125171],\r\n              [-82.99311, 8.248187],\r\n              [-83.125625, 8.335839],\r\n              [-83.153792, 8.369807],\r\n              [-83.105737, 8.457431],\r\n              [-83.161341, 8.546393],\r\n              [-83.191557, 8.616325],\r\n              [-83.259529, 8.630582],\r\n              [-83.327507, 8.665203],\r\n              [-83.356352, 8.715431],\r\n              [-83.441488, 8.701857],\r\n              [-83.46141, 8.69982],\r\n              [-83.429831, 8.658415],\r\n              [-83.284942, 8.547072],\r\n              [-83.274647, 8.506328],\r\n              [-83.26778, 8.382714],\r\n              [-83.293868, 8.360975],\r\n              [-83.535537, 8.433659],\r\n              [-83.587748, 8.439092],\r\n              [-83.611785, 8.482559],\r\n              [-83.709965, 8.565405],\r\n              [-83.745679, 8.599353],\r\n              [-83.719595, 8.686924],\r\n              [-83.661921, 8.717467],\r\n              [-83.652988, 8.797547],\r\n              [-83.611794, 8.847757],\r\n              [-83.633071, 8.913564],\r\n              [-83.652297, 9.024796],\r\n              [-83.723701, 9.110233],\r\n              [-83.810217, 9.190904],\r\n              [-83.904286, 9.268168],\r\n              [-84.040922, 9.333219],\r\n              [-84.170699, 9.377935],\r\n              [-84.190627, 9.437547],\r\n              [-84.484473, 9.507307],\r\n              [-84.535319, 9.504598],\r\n              [-84.599862, 9.552678],\r\n              [-84.668526, 9.602781],\r\n              [-84.692565, 9.665738],\r\n              [-84.681583, 9.7253],\r\n              [-84.652747, 9.760491],\r\n              [-84.676085, 9.812593],\r\n              [-84.728953, 9.880246],\r\n              [-84.744751, 9.91542],\r\n              [-84.758484, 9.960059],\r\n              [-84.805171, 9.972232],\r\n              [-84.821747, 9.973923],\r\n              [-84.853329, 9.971218],\r\n              [-84.858482, 9.977304],\r\n              [-84.84767, 9.982883],\r\n              [-84.846124, 9.990829],\r\n              [-84.883884, 10.005537],\r\n              [-84.921203, 10.026329],\r\n              [-84.962414, 10.05067],\r\n              [-84.980957, 10.080417],\r\n              [-85.0146, 10.099346],\r\n              [-85.0455, 10.120302],\r\n              [-85.074261, 10.1323],\r\n              [-85.085418, 10.140242],\r\n              [-85.097434, 10.155112],\r\n              [-85.091279, 10.158153]\r\n            ]\r\n          ],\r\n          [\r\n            [\r\n              [-85.230226, 9.730038],\r\n              [-85.194511, 9.668446],\r\n              [-85.161552, 9.633246],\r\n              [-85.145756, 9.611582],\r\n              [-85.140262, 9.58247],\r\n              [-85.114859, 9.556063],\r\n              [-85.08808, 9.571636],\r\n              [-85.06748, 9.646108],\r\n              [-85.040016, 9.675215],\r\n              [-84.997445, 9.696874],\r\n              [-84.99341, 9.705842],\r\n              [-84.998901, 9.712441],\r\n              [-85.014349, 9.714979],\r\n              [-85.016754, 9.721747],\r\n              [-85.011091, 9.736467],\r\n              [-84.995299, 9.747464],\r\n              [-84.98929, 9.741712],\r\n              [-84.981908, 9.739005],\r\n              [-84.977102, 9.735621],\r\n              [-84.975728, 9.73156],\r\n              [-84.968519, 9.727838],\r\n              [-84.959421, 9.725131],\r\n              [-84.951353, 9.726654],\r\n              [-84.948949, 9.73579],\r\n              [-84.951866, 9.74628],\r\n              [-84.951695, 9.756769],\r\n              [-84.943628, 9.759306],\r\n              [-84.938821, 9.757276],\r\n              [-84.936246, 9.756092],\r\n              [-84.929037, 9.759983],\r\n              [-84.927319, 9.768949],\r\n              [-84.923543, 9.776731],\r\n              [-84.917535, 9.784344],\r\n              [-84.920281, 9.790941],\r\n              [-84.899856, 9.796693],\r\n              [-84.901055, 9.803459],\r\n              [-84.895219, 9.81327],\r\n              [-84.879085, 9.812086],\r\n              [-84.875306, 9.820712],\r\n              [-84.864149, 9.824095],\r\n              [-84.862603, 9.831368],\r\n              [-84.892811, 9.835258],\r\n              [-84.914098, 9.82714],\r\n              [-84.929892, 9.835258],\r\n              [-84.919939, 9.844561],\r\n              [-84.906035, 9.851834],\r\n              [-84.905518, 9.859613],\r\n              [-84.917189, 9.863503],\r\n              [-84.919937, 9.873651],\r\n              [-84.934355, 9.880415],\r\n              [-84.927148, 9.897326],\r\n              [-84.913073, 9.900878],\r\n              [-84.918735, 9.924551],\r\n              [-84.932639, 9.92844],\r\n              [-84.930238, 9.932837],\r\n              [-84.957356, 9.941291],\r\n              [-84.974604, 9.942813],\r\n              [-85.005505, 9.943489],\r\n              [-85.018897, 9.951605],\r\n              [-85.024048, 9.965807],\r\n              [-85.049108, 9.975951],\r\n              [-85.068335, 9.976966],\r\n              [-85.080009, 9.980685],\r\n                [-85.095458, 9.974261],\r\n                [-85.108848, 9.981362],\r\n                [-85.119834, 9.996577],\r\n                [-85.140776, 10.007734],\r\n                [-85.159316, 10.020582],\r\n                [-85.16996, 10.010777],\r\n                [-85.162409, 9.993196],\r\n                [-85.161035, 9.985757],\r\n                [-85.16996, 9.979671],\r\n                [-85.183349, 9.971218],\r\n                [-85.202231, 9.967836],\r\n                [-85.22077, 9.969865],\r\n                [-85.234504, 9.967836],\r\n                [-85.247894, 9.970879],\r\n                [-85.255447, 9.96344],\r\n                [-85.26712, 9.96175],\r\n                [-85.272614, 9.950929],\r\n                [-85.270555, 9.938417],\r\n                [-85.276047, 9.928271],\r\n                [-85.277421, 9.917788],\r\n                [-85.265063, 9.915082],\r\n                [-85.243092, 9.907642],\r\n                [-85.217, 9.900878],\r\n                [-85.214937, 9.892084],\r\n                [-85.202922, 9.884643],\r\n                [-85.198458, 9.864687],\r\n                [-85.195367, 9.857922],\r\n                [-85.175114, 9.853525],\r\n                [-85.180603, 9.844392],\r\n                [-85.186097, 9.843039],\r\n                [-85.185754, 9.836273],\r\n                [-85.187127, 9.826125],\r\n                [-85.187471, 9.815976],\r\n                [-85.19056, 9.806504],\r\n                [-85.194336, 9.796354],\r\n                [-85.190561, 9.78316],\r\n                [-85.180262, 9.781468],\r\n                [-85.192275, 9.772333],\r\n                [-85.197769, 9.768949],\r\n                [-85.1988, 9.760152],\r\n                [-85.203606, 9.752709],\r\n                [-85.207383, 9.745603],\r\n                [-85.214592, 9.740527],\r\n                [-85.218369, 9.743234],\r\n                [-85.215967, 9.728684],\r\n                [-85.230041, 9.729699]\r\n              ]\r\n            ]\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n};\r\n","export default \"footer {\\r\\n  position: absolute;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  padding: 1rem;\\r\\n  text-align: center;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLFFBQVE7RUFDUixTQUFTO0VBQ1QsT0FBTztFQUNQLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsVUFBVTtBQUNaIiwiZmlsZSI6InNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9vdGVyIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgcGFkZGluZzogMXJlbTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgei1pbmRleDogMTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4tZGFzaGJvYXJkL21haW4tZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main-dashboard',\r\n  templateUrl: './main-dashboard.component.html',\r\n  styleUrls: ['./main-dashboard.component.css']\r\n})\r\nexport class MainDashboardComponent implements OnInit {\r\n\r\n  title = 'COVID19 - Costa Rica'\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".map-container {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    margin-top: 50px;\\r\\n    z-index: 0;\\r\\n  }\\r\\n\\r\\n  .map-frame {\\r\\n    border: 2px solid black;\\r\\n    height: 100%;\\r\\n  }\\r\\n\\r\\n  #map {\\r\\n    position: relative;\\r\\n    height: 85%;\\r\\n  }\\r\\n\\r\\n  #generalStats {\\r\\n  position: absolute;\\r\\n  bottom: 25px;\\r\\n  left: 25px;\\r\\n}\\r\\n\\r\\n  #showMarkers {\\r\\n  position: absolute;\\r\\n  top:60px;\\r\\n  right:25px;\\r\\n}\\r\\n\\r\\n  .info {\\r\\n  padding: 6px 8px;\\r\\n  font:Arial, Helvetica, sans-serif;\\r\\n  background: white;\\r\\n  background: rgba(255,255,255,0.8);\\r\\n  box-shadow: 0 0 15px rgba(0,0,0,0.2);\\r\\n  border-radius: 5px;\\r\\n}\\r\\n\\r\\n  .info h4 {\\r\\n  margin: 0 0 5px;\\r\\n  color: #777;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFwL21hcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLE1BQU07SUFDTixPQUFPO0lBQ1AsUUFBUTtJQUNSLFNBQVM7SUFDVCxnQkFBZ0I7SUFDaEIsVUFBVTtFQUNaOztFQUVBO0lBQ0UsdUJBQXVCO0lBQ3ZCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixXQUFXO0VBQ2I7O0VBRUY7RUFDRSxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFVBQVU7QUFDWjs7RUFFQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsVUFBVTtBQUNaOztFQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlDQUFpQztFQUNqQyxpQkFBaUI7RUFDakIsaUNBQWlDO0VBQ2pDLG9DQUFvQztFQUNwQyxrQkFBa0I7QUFDcEI7O0VBQ0E7RUFDRSxlQUFlO0VBQ2YsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvbWFwL21hcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hcC1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbWFyZ2luLXRvcDogNTBweDtcclxuICAgIHotaW5kZXg6IDA7XHJcbiAgfVxyXG5cclxuICAubWFwLWZyYW1lIHtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgI21hcCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBoZWlnaHQ6IDg1JTtcclxuICB9XHJcblxyXG4jZ2VuZXJhbFN0YXRzIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgYm90dG9tOiAyNXB4O1xyXG4gIGxlZnQ6IDI1cHg7XHJcbn1cclxuXHJcbiNzaG93TWFya2VycyB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDo2MHB4O1xyXG4gIHJpZ2h0OjI1cHg7XHJcbn1cclxuXHJcbi5pbmZvIHtcclxuICBwYWRkaW5nOiA2cHggOHB4O1xyXG4gIGZvbnQ6QXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwyNTUsMjU1LDAuOCk7XHJcbiAgYm94LXNoYWRvdzogMCAwIDE1cHggcmdiYSgwLDAsMCwwLjIpO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG4uaW5mbyBoNCB7XHJcbiAgbWFyZ2luOiAwIDAgNXB4O1xyXG4gIGNvbG9yOiAjNzc3O1xyXG59XHJcbiJdfQ== */\"","import { element } from 'protractor';\r\nimport { CoronastatisticsService } from \"./../services/coronastatistics.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport name from \"../data/data\";\r\nimport * as L from \"leaflet\";\r\nimport * as myProvinces from \"../data/provincesData\";\r\nimport { read } from \"fs\";\r\n\r\n@Component({\r\n  selector: \"app-map\",\r\n  templateUrl: \"./map.component.html\",\r\n  styleUrls: [\"./map.component.css\"]\r\n})\r\nexport class MapComponent implements OnInit {\r\n\r\n  private marker: any;\r\n  cases: number;\r\n  todayCases: number;\r\n  totalRecovered: number;\r\n  deaths: number;\r\n  nDeaths: number;\r\n  lastChecked: string;\r\n\r\n  currentProv: any;\r\n\r\n  map: any;\r\n  base: string[] = myProvinces.provincesData.features;\r\n\r\n  markersFlag: false\r\n  public markersArray: Array<any> = [];\r\n\r\n  provinceData:any;\r\n\r\n  constructor(private css: CoronastatisticsService) {}\r\n\r\n  ngOnInit() {\r\n    this.initMainLayer();\r\n    this.loadGeneralData();\r\n  }\r\n\r\n  initMainLayer(){\r\n    this.map = L.map(\"map\", { center: [9.934739, -84.087502], zoom: 9 });\r\n    L.tileLayer(\r\n      \"https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw\",\r\n      {\r\n        maxZoom: 18,\r\n        attribution:\r\n          'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\r\n          '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\r\n          'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n        id: \"mapbox/streets-v11\",\r\n        tileSize: 512,\r\n        zoomOffset: -1\r\n      }\r\n    ).addTo(this.map);\r\n  }\r\n\r\n  showDistricts(){\r\n    this.map.remove();\r\n    this.initMainLayer();\r\n    this.initMarkers();\r\n  }\r\n\r\n  showProvinces(){\r\n    this.map.remove();\r\n    this.initMainLayer();\r\n    this.loadCantonesMap();\r\n  }\r\n\r\n  initCantonesMap(pD:any): void {\r\n    L.tileLayer(\r\n      // tslint:disable-next-line: max-line-length\r\n      'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw',\r\n      {\r\n        maxZoom: 18,\r\n        attribution:\r\n          'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\r\n          '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\r\n          'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n        id: \"mapbox/streets-v11\",\r\n        tileSize: 512,\r\n        zoomOffset: -1\r\n      }\r\n    ).addTo(this.map);\r\n\r\n    let data = '';\r\n    var geojson = L.geoJSON(JSON.parse(JSON.stringify(myProvinces.provincesData)), {\r\n\r\n      onEachFeature:function(feature, layer) {\r\n\r\n        layer.on(\"mouseover\", function() {\r\n          this.setStyle({\r\n            color: 'red'\r\n          });\r\n        });\r\n        layer.on('mouseout', function(e){\r\n          geojson.resetStyle(e.target);\r\n        });\r\n        layer.on(\"click\", function() {\r\n          //layer.remove();\r\n          // this.setStyle({\r\n          //     color: 'green'\r\n          // });\r\n        });\r\n\r\n        let province:string = feature.properties.name === \"San Jose\" ? \"sanJose\" : String(feature.properties.name).toLocaleLowerCase();\r\n        // Access dictionary of provinces and cases using province name\r\n\r\n        data = `<div class=\"info\">\r\n        <h4> <b> ${ feature.properties.name } </b> </h4>\r\n          <p>Casos confirmados: ${ pD[\"data\"][0][\"byLocation\"][province]}</p>\r\n        </div>`;\r\n\r\n        layer.bindPopup(data);\r\n      }\r\n    }\r\n    ).addTo(this.map)\r\n  }\r\n\r\n  getProvincia(name: string) {\r\n    for (let p in this.base) {\r\n      const provinceName = this.base[p][\"properties\"][\"name\"];\r\n      if ( provinceName === name) {\r\n        console.log(\"Nombre de Provincia:\",this.base[p][\"properties\"][\"name\"]);\r\n        console.log(this.base[p]);\r\n        return this.base[p];\r\n      }\r\n    }\r\n  }\r\n\r\n  initMarkers() {\r\n    name.forEach(element => {\r\n      const data = `<div class=\"card text-center\" style=\"width: 18rem;\" ><div class=\"card-body\" >\r\n       <h5 class=\"card-title\"> ${element.name} </h5>\r\n         <p class=\"card-text\">Casos confirmados: ${element.cases} </p>\r\n         </div>\r\n       </div>`;\r\n\r\n      const newMarker = L.marker(element.latlng).addTo(this.map).bindPopup(data);\r\n    });\r\n  }\r\n\r\n  loadGeneralData() {\r\n    this.css\r\n      .loadCostaRicaData()\r\n      .toPromise()\r\n      .then(data => {\r\n        console.log(\"GeneralData:\",data);\r\n        const date = new Date(data[\"data\"][\"lastChecked\"]);\r\n        this.lastChecked = date.toISOString().substring(0, 10);\r\n        this.cases = data[\"data\"][\"covid19Stats\"][0][\"confirmed\"];\r\n        this.todayCases = data[\"todayCases\"];\r\n        this.totalRecovered = data[\"data\"][\"covid19Stats\"][0][\"recovered\"];\r\n        this.deaths = data[\"data\"][\"covid19Stats\"][0][\"deaths\"];\r\n        this.nDeaths = data[\"todayDeaths\"];\r\n        // this.stats = Object.keys(data).map(e => data[e]);\r\n        // console.log('Data:' + this.stats);\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  onProvinceChanged(value: string) {\r\n\r\n    console.log(value);\r\n    const provincia = this.getProvincia(value);\r\n    L.geoJSON(JSON.parse(JSON.stringify(provincia)), {\r\n      onEachFeature(feature, layer) {\r\n        layer.on('mouseover', function(){\r\n\r\n        });\r\n        layer.on('mouseout', function() {\r\n          this.setStyle({\r\n            color: \"blue\"\r\n          });\r\n        });\r\n        layer.on('click', function() {\r\n          layer.remove();\r\n          // this.setStyle({\r\n          //     color: 'green'\r\n          // });\r\n        });\r\n      }\r\n    }).addTo(this.map);\r\n\r\n  }\r\n\r\n  loadCantonesMap(){\r\n    // this.css.load().subscribe(data => {\r\n    //   // this.provinceData = data[\"data\"][0][\"byLocation\"];\r\n    //   // console.log(this.provinceData);\r\n    //   // // for (const p in dataByLoc) {\r\n    //   // //   this.setProvinceCases(p.toUpperCase(), dataByLoc[p])\r\n    //   // // };\r\n    //   return data[\"data\"][0][\"byLocation\"];\r\n    // });\r\n    this.css.loadProvinceData().subscribe(\r\n      ( data ) => {\r\n      this.provinceData = data;\r\n      this.initCantonesMap(this.provinceData);\r\n      }\r\n    );\r\n  }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\n\r\nexport class CoronastatisticsService {\r\n\r\n\r\n  URL_API = 'https://covid-19-coronavirus-statistics.p.rapidapi.com/v1/stats';\r\n  API_KEY = '';\r\n  CR_API = 'https://coronaviruscr.com/api/reports';\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    environment.production ? this.API_KEY = environment.api_tst_key : this.API_KEY = environment.api_tst_key;\r\n   }\r\n\r\n  loadCostaRicaData(){\r\n    const _params = new HttpParams()\r\n    .set('country', 'Costa Rica')\r\n    const _headers = new HttpHeaders()\r\n    .set('x-rapidapi-host','covid-19-coronavirus-statistics.p.rapidapi.com')\r\n    .set('X-RapidAPI-Key', this.API_KEY);\r\n    return this.httpClient.get(this.URL_API,\r\n      {headers:_headers, params: _params});\r\n  }\r\n\r\n  loadProvinceData(){\r\n    const headers = new HttpHeaders()\r\n    .set('Content-Type','application/json');\r\n    return this.httpClient.get(this.CR_API, {headers});\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api_tst_key : '41e7fd92a1msh6d64dc92c4406f1p15bfcbjsn6732a42639f9',\r\n  api_stg_key : '123queso'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}